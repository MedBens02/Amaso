# Production Dockerfile for Next.js Frontend (Git-based deployment)
FROM node:20-alpine AS base

# Install dependencies only when needed
FROM base AS deps
WORKDIR /app

# Wait for source files to be available
COPY docker-wait-for-source.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-wait-for-source.sh

# Copy entrypoint that handles source loading
COPY docker-entrypoint-frontend.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint-frontend.sh

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app

# Copy entrypoint
COPY docker-entrypoint-frontend.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint-frontend.sh

# Production image, copy all the files and run next
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Create non-root user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy entrypoint
COPY docker-entrypoint-frontend.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint-frontend.sh

# Change ownership
RUN chown -R nextjs:nodejs /app

USER nextjs

EXPOSE 3000

ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

# Use custom entrypoint
ENTRYPOINT ["docker-entrypoint-frontend.sh"]

# Default command
CMD ["npm", "start"]